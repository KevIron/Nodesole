.node {
    --node-logic: oklch(0.7 0.14 30);
    --node-data: oklch(0.7 0.14 260); 
}

.node {
    position: absolute;
    z-index: 1;
}

.node-header {
    pointer-events: none;

    font-size: 1.28rem;
    font-weight: 500;
    color: hsl(0, 0%, 100%);
    text-align: center;
}

.node-body {
    background-color: #fff;
    width: min-content;
}

.input, 
.output {
    font-size: 1.28rem;
    color: hsl(0, 0%, 10%);
    text-transform: capitalize;
    text-wrap: nowrap;
}

/* STYLES FOR SPECIFIC NODE TYPES */

.node__entry {
    background-color: hsl(120, 90%, 40%);
    
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 4.8rem;
   
    padding: 1.2rem 2.4rem;

    .node-body {
        display: flex;
        align-items: center;
        background-color: transparent;
    }

    .connector {
        fill: #fff;
        stroke: #fff;
    }

    .input, 
    .output {
        display: inline-flex;
        align-items: center;
        grid-column: auto;
    }
}

.node__console-writter {
    border: 1px solid var(--node-logic); 

    .node-body {
        display: flex;
        align-items: center;
        gap: 1.6rem;

        padding: 0.6rem 1.2rem;
    }

    .node-header {
        background-color: var(--node-logic);
        padding: 0.4rem 0.8rem;
    }

    .format-input {
        width: min-content;

        font-size: 1.28rem;
        color: var(--text-secondary);

        order: 2;
    }

    #format {
        border: 1px solid black;
    }

    textarea {
        width: min-content;
        min-width: 17.5rem;
        border: 1px solid var(--text-secondary);
        resize: none;
        overflow: auto;
    }

    .input {
        display: flex;
        align-content: center; 
        gap: 0.6rem;
    }

    .inputs { 
        order: 1; 
        display: grid;
        gap: 0.4rem; 
    }

    .outputs {order: 3 }
}

.node__constant-emitter {
    border: 1px solid var(--node-data);
    background-color: #fff;

    .node-header {
        background-color: var(--node-data);
        padding: 0.4rem 0.8rem;
    }

    .node-body {
        display: grid;
        grid-template-columns: 1fr auto;
        gap: 1.2rem;
        padding: 0.6rem 1.2rem;
    }

    label {
        display: inline-block;
        margin-bottom: 0.4rem;
        font-size: 1.28rem;
    }

    select {
        margin-bottom: 1.2rem;
    }

    select, input {
        display: block;
        min-width: 17.5rem;
        width: min-content;
        border: 1px solid black;
    }
}

.node__equals-to,
.node__negation,
.node__and,
.node__or {
    background-color: var(--node-logic);
    padding: 1.2rem;

    .node-header { display: none }

    .node-body {
        display: grid;
        grid-template-columns: auto 1fr auto;
        align-content: center;
        gap: 0.8rem 2rem;
        background-color: transparent;
    }

    .input, 
    .output {
        display: flex;
        align-items: center;
        gap: 0.6rem;

        color: #e2e2e2;
        font-size: 1.28rem;

        & > svg {
            stroke: #e2e2e2;
            fill: #e2e2e2;
        }
    }

    .input {
        grid-column: 1;
    }

    .output {
        grid-column: 3;
        grid-row: 1 / span 2;
    }

    .body-text {
        display: flex;
        align-items: center;
        grid-column: 2;
        grid-row: 1 / span 2;
        color: #f0f0f0;
        font-weight: 600;
    }
}

.node__negation {
    .input {
        grid-row: span 2;
    }
}

.node__condition {
    border: 1px solid var(--node-data);
    background-color: #fff;

    .node-header {
        background-color: var(--node-data);
        padding: 0.4rem 0.8rem;
    }

    .node-body {
        display: grid;
        grid-template-columns: auto min-content min-content auto;
        grid-auto-flow: dense;
        row-gap: 0.4rem;
        padding: 0.6rem 1.2rem;
    }

    .input, 
    .output {
        display: grid;
        grid-template-columns: subgrid;
        align-items: center;
        gap: 0.6rem;
    }

    .input { grid-column: 1 / 3; text-align: left; margin-right: 3.2rem; }
    .output { grid-column: 3 / 5; text-align: right }
}